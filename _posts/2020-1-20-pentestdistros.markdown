---
layout: post
title:  "Creating my pentest distro"
date:   2020-1-2 00:10:00 +0000
categories: blog
---

After many years spent breaking and building things on the backtrack project and continuing on when they transitioned to kali, i decided to move away from stock standard pentest distros, heres why. 

# Reasoning
Pentest distros these days come in all shapes and sizes and for all uses. Most work out of the box and are easy to get started with.

After months of looking at nicly designed distros on /r/unixporn and relevant distro subreddit pages i decided that kali was infact quite stale to look at and work from.
My end goal was to create a good looking functional setup to work out of that was easy to deploy if i had to purge my system.

# Ansible
If youve never heard of Ansible, its a tool that can be used in conjuntion with a config/setup file that contains a series of instructions which contains steps needed to setup internal tooling. Basically, we write a fancy yaml file and host it somewhere accessible, then when we need to, we can setup a blank vm image, download the yaml and it should cover the rest. This setup was ideal for me as i can redeploy the image if/when i need to switch pcs or temporarily purge the vm for privacy reasons. However, my yaml is still a work in progress as there is quite a few tools i wish to have in this distro. 
# Ricing & dotfiles
Heres where having knowledge of git is gonna pay off. Having everything in a public (or private) repo somewhere will help loads in saving all needed files.
What i chose to do was test build the vm locally on a desktop to test all my config files, from there once usable i just deployed on my laptop and cloned all my dotfiles down and boom, setup.


# Designed distro vs setups
So why did i move away from a distro setup like kali? Ive used and followed the backtrack project since i started with pentesting and security. Its been years and theyve made steady additions to the setup but i feel like recently the changes are sub-par.
In the last major change of kali, they included a variety of tools used to make the distro easier and more beginner friendly. While i understand why this is useful, i didnt really want to clog up the already fairly cluttered vm with these things. 
Ive tried many a pentest os including backtrack, kali, parrot and blackarch. Kali, in my opinion is the best of that list but i feel it can be vastly improved to meet my needs.
The approach ive taken is to take a base os like debian which isnt cluttered and install all my dependancies and tools ontop of that in a manner that is flexible and easily deployed.

# Logging extra
A couple of days ago on twitter a user posted an extract from an article by Context Information Security about how to setup your terminal environment for logging. The guide goes through how you can simply edit your .bashrc file with some bash oneliners to setup a logging system by time stamp so you know exactly what you did and when. The article can be found [here] (https://www.contextis.com/en/blog/logging-like-a-lumberjack)

# Suggested apps 
openbox - My prefered WM which offers a basic but configurable menu
lemonbar - A simple highly configurable bar for clean stats
grc - Method of colorising stdout, nice for alias scripting
neofetch - Must needed when ricing!
i3lock - locking mechanism with customisable features.
vim-airline - nice powerline for vim
font-awesome - fonts
Anything from /r/coolgithubprojects
<br>
Ill try fill this list with more cool stuff for your setup over time.
